import{_ as n,r as a,o,c,b as e,d as s,e as r,a as p}from"./app-46c75814.js";const _="/assets/1699592444818-179e65cb.png",i="/assets/1699592906461-2090aee2.jpg",h="/assets/1699593205380-a18357a5.png",d="/assets/1699593405205-edcb5f43.png",m="/assets/1699593537690-7274875b.png",l="/assets/1699593608712-5b8f337b.png",g={},j=e("h2",{id:"准备工具",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#准备工具","aria-hidden":"true"},"#"),s(" 准备工具")],-1),f={href:"https://github.com/c0ny1/jsEncrypter/releases/tag/0.3.2",target:"_blank",rel:"noopener noreferrer"},b={href:"https://phantomjs.org/download.html",target:"_blank",rel:"noopener noreferrer"},u=p('<h2 id="使用步骤" tabindex="-1"><a class="header-anchor" href="#使用步骤" aria-hidden="true">#</a> 使用步骤</h2><p>1.将jsEncrypter解压后的jar文件加载进burp 2.将下载好的phantomjs中的phantomjs.exe文件解压至jsEncrypter.0.3.2目录中，总共五个文件： <img src="'+_+'"></p><p>3.打开phantomjs_server.js，首先引入js加密文件即1.js，然后调用文件中的加密函数 <img src="'+i+'"></p><p>4.启动phantomjs_server.js 如下，则成功启动 <img src="'+h+'"> 接着在插件中测试payload能否正常加密，点击connect，再点击Test， 成功调用加密函数实现加密 <img src="'+d+'"> 加入字典后，在intruder模块中加载该插件 <img src="'+m+'"> 爆破成功后，复制密文，我们可以在日志文件搜索该密文对应的明文 <img src="'+l+'"></p>',4);function x(E,k){const t=a("ExternalLinkIcon");return o(),c("div",null,[j,e("p",null,[s("1.jsEncrypter "),e("a",f,[s("点击下载"),r(t)])]),e("p",null,[s("2.phantomjs "),e("a",b,[s("点击下载"),r(t)])]),u])}const v=n(g,[["render",x],["__file","1.html.vue"]]);export{v as default};
